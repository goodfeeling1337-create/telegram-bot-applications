#!/usr/bin/env python3
# test_token.py - –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞

import asyncio
import sys
from telegram import Bot
from config import BOT_TOKEN

async def test_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞"""
    print("üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...")
    print(f"üìã –¢–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...{BOT_TOKEN[-10:]}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
        bot = Bot(token=BOT_TOKEN)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        me = await bot.get_me()
        
        print("‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"ü§ñ –ò–º—è –±–æ—Ç–∞: {me.first_name}")
        print(f"üìõ Username: @{me.username}")
        print(f"üÜî ID –±–æ—Ç–∞: {me.id}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {me.description or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        try:
            updates = await bot.get_updates(limit=1)
            print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = await test_token()
    
    if success:
        print("\nüéâ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω!")
        print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    else:
        print("\nüí• –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
